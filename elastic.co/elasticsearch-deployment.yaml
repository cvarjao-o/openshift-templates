apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: elasticsearch-master-pdb
  namespace: csnr-devops-lab-deploy
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: elasticsearch-master
apiVersion: v1
data:
  elasticsearch.yml: |
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.transport.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.http.ssl.enabled: true
    xpack.security.http.ssl.truststore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
    xpack.security.http.ssl.keystore.path: /usr/share/elasticsearch/config/certs/elastic-certificates.p12
kind: ConfigMap
metadata:
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Tiller
    release: release-name
  name: elasticsearch-master-config
  namespace: csnr-devops-lab-deploy
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Tiller
    release: release-name
  name: elasticsearch-master
  namespace: csnr-devops-lab-deploy
spec:
  ports:
  - name: http
    port: 9200
    protocol: TCP
  - name: transport
    port: 9300
    protocol: TCP
  selector:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Tiller
    release: release-name
  type: ClusterIP
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Tiller
    release: release-name
  name: elasticsearch-master-headless
  namespace: csnr-devops-lab-deploy
spec:
  clusterIP: None
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
  publishNotReadyAddresses: true
  selector:
    app: elasticsearch-master
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    esMajorVersion: "7"
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Tiller
    release: release-name
  name: elasticsearch-master
  namespace: csnr-devops-lab-deploy
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch-master
  serviceName: elasticsearch-master-headless
  template:
    metadata:
      annotations:
        configchecksum: ad01ea31b16d303b64be1833644bd53b7300b6bceef655ba362ffc2dae39790
      labels:
        app: elasticsearch-master
        chart: elasticsearch
        heritage: Tiller
        release: release-name
      name: elasticsearch-master
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - elasticsearch-master
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.initial_master_nodes
          value: elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,
        - name: discovery.seed_hosts
          value: elasticsearch-master-headless
        - name: cluster.name
          value: elasticsearch
        - name: network.host
          value: 0.0.0.0
        - name: ES_JAVA_OPTS
          value: -Xmx1g -Xms1g
        - name: node.data
          value: "true"
        - name: node.ingest
          value: "true"
        - name: node.master
          value: "true"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: elastic-credentials
        - name: ELASTIC_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: elastic-credentials
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
        imagePullPolicy: IfNotPresent
        name: elasticsearch
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - |
              #!/usr/bin/env bash -e
              # If the node is starting up wait for the cluster to be ready (request params: 'wait_for_status=green&timeout=1s' )
              # Once it has started only check that the node itself is responding
              START_FILE=/tmp/.es_start_file

              http () {
                  local path="${1}"
                  if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                    BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                  else
                    BASIC_AUTH=''
                  fi
                  curl -XGET -s -k --fail ${BASIC_AUTH} https://127.0.0.1:9200${path}
              }

              if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  http "/"
              else
                  echo 'Waiting for elasticsearch cluster to become cluster to be ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" ; then
                      touch ${START_FILE}
                      exit 0
                  else
                      echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                      exit 1
                  fi
              fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 2Gi
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: null
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/certs
          name: elastic-certificates
        - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          name: esconfig
          subPath: elasticsearch.yml
      initContainers: null
      securityContext: null
      terminationGracePeriodSeconds: 120
      volumes:
      - name: elastic-certificates
        secret:
          secretName: elastic-certificates
      - configMap:
          name: elasticsearch-master-config
        name: esconfig
  updateStrategy:
    type: RollingUpdate
